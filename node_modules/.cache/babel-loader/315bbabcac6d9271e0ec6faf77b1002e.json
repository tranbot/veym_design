{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inheritsLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Dropdown = _interopRequireDefault(require(\"./Dropdown\"));\n\nvar _splitComponentProps2 = _interopRequireDefault(require(\"./utils/splitComponentProps\"));\n\nvar _ValidComponentChildren = _interopRequireDefault(require(\"./utils/ValidComponentChildren\"));\n\nvar propTypes = (0, _extends2.default)({}, _Dropdown.default.propTypes, {\n  // Toggle props.\n  title: _propTypes.default.node.isRequired,\n  noCaret: _propTypes.default.bool,\n  active: _propTypes.default.bool,\n  activeKey: _propTypes.default.any,\n  activeHref: _propTypes.default.string,\n  // Override generated docs from <Dropdown>.\n\n  /**\n   * @private\n   */\n  children: _propTypes.default.node\n});\n\nvar NavDropdown =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(NavDropdown, _React$Component);\n\n  function NavDropdown() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = NavDropdown.prototype;\n\n  _proto.isActive = function isActive(_ref, activeKey, activeHref) {\n    var _this = this;\n\n    var props = _ref.props;\n\n    if (props.active || activeKey != null && props.eventKey === activeKey || activeHref && props.href === activeHref) {\n      return true;\n    }\n\n    if (_ValidComponentChildren.default.some(props.children, function (child) {\n      return _this.isActive(child, activeKey, activeHref);\n    })) {\n      return true;\n    }\n\n    return props.active;\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        title = _this$props.title,\n        activeKey = _this$props.activeKey,\n        activeHref = _this$props.activeHref,\n        className = _this$props.className,\n        style = _this$props.style,\n        children = _this$props.children,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"title\", \"activeKey\", \"activeHref\", \"className\", \"style\", \"children\"]);\n    var active = this.isActive(this, activeKey, activeHref);\n    delete props.active; // Accessed via this.isActive().\n\n    delete props.eventKey; // Accessed via this.isActive().\n\n    var _splitComponentProps = (0, _splitComponentProps2.default)(props, _Dropdown.default.ControlledComponent),\n        dropdownProps = _splitComponentProps[0],\n        toggleProps = _splitComponentProps[1]; // Unlike for the other dropdowns, styling needs to go to the `<Dropdown>`\n    // rather than the `<Dropdown.Toggle>`.\n\n\n    return _react.default.createElement(_Dropdown.default, (0, _extends2.default)({}, dropdownProps, {\n      componentClass: \"li\",\n      className: (0, _classnames.default)(className, {\n        active: active\n      }),\n      style: style\n    }), _react.default.createElement(_Dropdown.default.Toggle, (0, _extends2.default)({}, toggleProps, {\n      useAnchor: true\n    }), title), _react.default.createElement(_Dropdown.default.Menu, null, _ValidComponentChildren.default.map(children, function (child) {\n      return _react.default.cloneElement(child, {\n        active: _this2.isActive(child, activeKey, activeHref)\n      });\n    })));\n  };\n\n  return NavDropdown;\n}(_react.default.Component);\n\nNavDropdown.propTypes = propTypes;\nvar _default = NavDropdown;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}